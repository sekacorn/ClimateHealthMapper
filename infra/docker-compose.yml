version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: climate-health-postgres
    environment:
      POSTGRES_USER: climate_admin
      POSTGRES_PASSWORD: dev_password
      POSTGRES_DB: climate_health_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - climate-health-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U climate_admin -d climate_health_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: climate-health-redis
    command: redis-server --requirepass dev_password --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - climate-health-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "dev_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    image: climate-health/api-gateway:latest
    container_name: climate-health-api-gateway
    build:
      context: ../backend/api-gateway
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: development
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: climate_health_db
      POSTGRES_USER: climate_admin
      POSTGRES_PASSWORD: dev_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: dev_password
      JWT_SECRET: dev_jwt_secret_key_change_in_production
      CLIMATE_INTEGRATOR_URL: http://climate-integrator:8081
      CLIMATE_VISUALIZER_URL: http://climate-visualizer:8082
      USER_SESSION_URL: http://user-session:8083
      LLM_SERVICE_URL: http://llm-service:8084
      COLLABORATION_SERVICE_URL: http://collaboration-service:8085
      AI_MODEL_URL: http://ai-model:8086
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - climate-health-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Climate Integrator
  climate-integrator:
    image: climate-health/climate-integrator:latest
    container_name: climate-health-climate-integrator
    build:
      context: ../backend/climate-integrator
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: 8081
      SPRING_PROFILES_ACTIVE: development
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: climate_health_db
      POSTGRES_USER: climate_admin
      POSTGRES_PASSWORD: dev_password
      NOAA_API_URL: https://www.ncei.noaa.gov/cdo-web/api/v2
      NASA_API_URL: https://power.larc.nasa.gov/api
      WHO_API_URL: https://ghoapi.azureedge.net/api
      OPENWEATHER_API_URL: https://api.openweathermap.org/data/2.5
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - climate-health-network

  # Climate Visualizer
  climate-visualizer:
    image: climate-health/climate-visualizer:latest
    container_name: climate-health-climate-visualizer
    build:
      context: ../backend/climate-visualizer
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: 8082
      SPRING_PROFILES_ACTIVE: development
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: climate_health_db
      POSTGRES_USER: climate_admin
      POSTGRES_PASSWORD: dev_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: dev_password
      CLIMATE_INTEGRATOR_URL: http://climate-integrator:8081
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - climate-health-network

  # User Session Service
  user-session:
    image: climate-health/user-session:latest
    container_name: climate-health-user-session
    build:
      context: ../backend/user-session
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: 8083
      SPRING_PROFILES_ACTIVE: development
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: climate_health_db
      POSTGRES_USER: climate_admin
      POSTGRES_PASSWORD: dev_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: dev_password
      JWT_SECRET: dev_jwt_secret_key_change_in_production
      JWT_EXPIRATION: 3600
      JWT_REFRESH_EXPIRATION: 86400
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - climate-health-network

  # LLM Service
  llm-service:
    image: climate-health/llm-service:latest
    container_name: climate-health-llm-service
    build:
      context: ../backend/llm-service
      dockerfile: Dockerfile
    environment:
      PORT: 8084
      ENVIRONMENT: development
      LOG_LEVEL: info
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: dev_password
      AI_MODEL_URL: http://ai-model:8086
      MAX_SEQUENCE_LENGTH: 512
    ports:
      - "8084:8084"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - climate-health-network

  # Collaboration Service
  collaboration-service:
    image: climate-health/collaboration-service:latest
    container_name: climate-health-collaboration-service
    build:
      context: ../backend/collaboration-service
      dockerfile: Dockerfile
    environment:
      PORT: 8085
      NODE_ENV: development
      LOG_LEVEL: info
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: climate_health_db
      POSTGRES_USER: climate_admin
      POSTGRES_PASSWORD: dev_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: dev_password
      WS_HEARTBEAT_INTERVAL: 30
      WS_TIMEOUT: 300
      JWT_SECRET: dev_jwt_secret_key_change_in_production
    ports:
      - "8085:8085"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - climate-health-network

  # AI Model Service
  ai-model:
    image: climate-health/ai-model:latest
    container_name: climate-health-ai-model
    build:
      context: ../backend/ai-model
      dockerfile: Dockerfile
    environment:
      PORT: 8086
      ENVIRONMENT: development
      LOG_LEVEL: info
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: climate_health_db
      POSTGRES_USER: climate_admin
      POSTGRES_PASSWORD: dev_password
      MODEL_TYPE: transformer
      MODEL_VERSION: "1.0"
      BATCH_SIZE: 32
      MAX_SEQUENCE_LENGTH: 512
    ports:
      - "8086:8086"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - climate-health-network
    # Uncomment for GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Frontend
  frontend:
    image: climate-health/frontend:latest
    container_name: climate-health-frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_API_URL: http://localhost/api
      REACT_APP_WS_URL: ws://localhost/ws
      REACT_APP_ENVIRONMENT: development
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    networks:
      - climate-health-network

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: climate-health-nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - api-gateway
      - collaboration-service
    networks:
      - climate-health-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  climate-health-network:
    driver: bridge
    name: climate-health-network
