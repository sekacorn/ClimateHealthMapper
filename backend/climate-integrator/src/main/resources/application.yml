spring:
  application:
    name: climate-integrator

  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:climate_health_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 60000
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
      enabled: true

  # Security Configuration
  security:
    user:
      name: ${SECURITY_USER:admin}
      password: ${SECURITY_PASSWORD:admin}

# Server Configuration
server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# Logging Configuration
logging:
  level:
    root: INFO
    com.climate.integrator: ${LOG_LEVEL:DEBUG}
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: ${SQL_LOG_LEVEL:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/climate-integrator.log
    max-size: 10MB
    max-history: 30

# Cache Configuration
spring.cache:
  type: redis
  redis:
    time-to-live: 3600000 # 1 hour in milliseconds
    cache-null-values: false

# Management and Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Application-specific Configuration
climate-integrator:
  data:
    max-file-size: 52428800 # 50MB in bytes
    max-records-per-file: 100000
    supported-formats:
      environmental: csv,json
      health: json
      genomic: vcf
  processing:
    batch-size: 1000
    thread-pool-size: 4
  validation:
    strict-mode: true
    sanitize-input: true

# CORS Configuration
cors:
  allowed-origins: ${CORS_ORIGINS:http://localhost:3000,http://localhost:4200}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  max-age: 3600
